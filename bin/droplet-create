#!/usr/bin/env bash
set -euxo pipefail

# echo 'Include config.d/*' >> ~/.ssh/config
# mkdir ~/.ssh/config.d

default_region=fra1
default_image=ubuntu-22-04-x64
default_size=c2-8vcpu-16gb # g-2vcpu-8gb
default_droplet_name=aatifsyed
default_tag=aatifsyed
project_id=da5e6601-7fd9-4d02-951e-390f7feb3411 # Forest-DEV
ssh_key_ids=$(
    doctl compute ssh-key list --no-header --format ID \
        | /usr/bin/paste --serial --delimiters=,
)

image=$default_image
if ! gum confirm "Use default image '$default_image'?" --default=yes; then
    image=$(
        doctl compute image list-distribution --format=Slug,Name,Type,Distribution,Public,MinDisk,ID \
            | fzf --header="select image" --query="$default_image" --header-lines=1 \
            | cat \
            | awk '{ print $1 }' 
    )
fi

region=$default_region
if ! gum confirm "Use default region '$default_region'?" --default=yes; then
    region=$(
        doctl compute region list --format=Slug,Name,Available \
            | fzf --header="select region" --query="$default_region" --header-lines=1 \
            | cat \
            | awk '{ print $1 }'
    )
fi

size=$default_size
if ! gum confirm "Use default size '$default_size'?" --default=yes; then
    size=$(
        doctl compute size list --format=Slug,Description,Memory,VCPUs,Disk,PriceMonthly,PriceHourly \
            | fzf --header="select size" --query="$default_size" --header-lines=1 \
            | cat \
            | awk '{ print $1 }'
    )
fi


ssh_user="root" # note we set HOME in the user data script
user_data_file=$(mktemp --suffix=.user-data.droplet-create)

# turn off variable substitution by quoting 'EOF'
cat << 'EOF' > "$user_data_file"
#!/usr/bin/env bash
set -eux

DEBIAN_FRONTEND=noninteractive
apt update
apt upgrade --yes
apt install --yes build-essential aria2 moreutils mold

curl https://sh.rustup.rs --silent --show-error | sh -s -- -y --verbose  --default-toolchain none
HOME=/root # for some reason $HOME isn't set when this is run
source "$HOME/.cargo/env"

mkdir /snapshots
aria2c --daemon --dir /snapshots \
    https://forest-snapshots.fra1.cdn.digitaloceanspaces.com/debug/filecoin_full_calibnet_2023-04-07_450000.car

git clone --recurse-submodules https://github.com/ChainSafe/forest.git
pushd forest

rustup show active-toolchain | awk '{ print $1 }' | xargs rustup default

make install-deps
cargo build
cargo bench --no-run

cargo install hyperfine biodiff exa zellij cargo-criterion pv
curl https://starship.rs/install.sh --silent --show-error | sh -s -- --yes
printf 'eval "$(starship init bash)"' >> $HOME/.bashrc

popd

EOF

name=$(gum input --header="Enter droplet name:" --value="$default_droplet_name")

gum spin --show-output --title="creating droplet..." -- \
    doctl compute droplet create "$name" \
        --image="$image" \
        --size="$size" \
        --region="$region" \
        --tag-name="$default_tag" \
        --ssh-keys="$ssh_key_ids" \
        --user-data-file="$user_data_file" \
        --wait \
        --verbose

droplet_id=$(doctl compute droplet list "$name" --format=ID --no-header)
test -n "$droplet_id"

doctl projects resources assign "$project_id" --resource="do:droplet:$droplet_id"

droplet_ip_addr=$(doctl compute droplet list "$name" --format=PublicIPv4 --no-header)
test -n "$droplet_ip_addr"

ssh_host="$name"

printf '\nHost %s\n\tHostname %s\n\tUser %s\n' "$ssh_host" "$droplet_ip_addr" "$ssh_user" \
    > "$HOME/.ssh/config.d/droplet.$ssh_host" # overwrite file

gum spin --show-output --title="waiting for ssh server..." -- bash -c "set +x; while true; do if ssh -o BatchMode=yes -o StrictHostKeyChecking=no $ssh_host whoami; then break; fi; sleep 1; done"

: "see logs with: ssh $ssh_host tail --follow /var/log/cloud-init-output.log"
gum spin --show-output --title="waiting for cloud-init to complete..." -- ssh "$ssh_host" cloud-init status --wait

ssh "$name"
